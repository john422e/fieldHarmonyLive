// run one of the ~sections blocks, then run the ~fills block

(
// define ~numSources and get durations from form_functions.py

// manually run form_functions.py for numSections values greater than 170 (pipe issue?)

// duration needs to be 1/2 of whatever duration you want (loop runs twice for each section), so 1/4 if combining two outputs

// python3 form_functions.py 70 3.5 1.5
// python3 form_functions.py 70 3.5 0.9
~sections = [0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.03, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.04, 0.03, 0.04, 0.04, 0.03, 0.04, 0.05, 0.04, 0.04, 0.04, 0.05, 0.04, 0.05, 0.05, 0.04, 0.05, 0.05, 0.05, 0.05, 0.05, 0.06, 0.05, 0.06, 0.05, 0.06, 0.05, 0.06, 0.06, 0.06, 0.05, 0.06, 0.06, 0.07, 0.06, 0.06, 0.06, 0.07, 0.06, 0.07, 0.06, 0.07, 0.06, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.08, 0.07, 0.08, 0.07, 0.08, 0.06, 0.07, 0.06, 0.06, 0.05, 0.06, 0.06, 0.05, 0.06, 0.05, 0.06, 0.05, 0.05, 0.05, 0.06, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.06, 0.05, 0.05, 0.05, 0.04, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.04, 0.05, 0.05, 0.05, 0.05, 0.04, 0.05, 0.05, 0.04, 0.05, 0.05, 0.05, 0.04, 0.05, 0.05, 0.04, 0.05, 0.04, 0.05, 0.05, 0.04, 0.05, 0.05, 0.04, 0.05, 0.04, 0.05, 0.04, 0.05, 0.04, 0.05, 0.04, 0.05, 0.04, 0.05];
)

(
// python3 form_functions.py 50 3.5 1.67
// python3 form_functions.py 50 3.5 0.87
~sections = [ 0.01, 0.01, 0.01, 0.02, 0.02, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.04, 0.05, 0.05, 0.05, 0.05, 0.06, 0.06, 0.06, 0.06, 0.06, 0.07, 0.07, 0.07, 0.07, 0.07, 0.08, 0.08, 0.08, 0.08, 0.09, 0.08, 0.09, 0.09, 0.09, 0.09, 0.1, 0.09, 0.1, 0.1, 0.1, 0.11, 0.1, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.12, 0.12, 0.09, 0.09, 0.09, 0.08, 0.08, 0.08, 0.08, 0.08, 0.07, 0.08, 0.07, 0.07, 0.08, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.06, 0.07, 0.07, 0.07, 0.06, 0.07, 0.06, 0.07, 0.06, 0.07, 0.06, 0.07, 0.06, 0.07, 0.06, 0.06, 0.07, 0.06, 0.06, 0.07, 0.06, 0.06, 0.06, 0.06, 0.07, 0.06, 0.06, 0.06, 0.06];
)

(
// this one goes slow to fast to slow
// python3 form_functions.py 50 3.5 0.87
// python3 form_functions.py 50 3.5 1.67
~sections = [0.1, 0.09, 0.09, 0.09, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.07, 0.08, 0.07, 0.07, 0.08, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.06, 0.07, 0.07, 0.07, 0.06, 0.07, 0.06, 0.07, 0.07, 0.06, 0.07, 0.06, 0.07, 0.06, 0.06, 0.07, 0.06, 0.07, 0.06, 0.06, 0.07, 0.06, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.03, 0.04, 0.04, 0.05, 0.04, 0.05, 0.05, 0.06, 0.05, 0.06, 0.06, 0.06, 0.07, 0.06, 0.07, 0.07, 0.08, 0.07, 0.08, 0.08, 0.08, 0.08, 0.08, 0.09, 0.09, 0.09, 0.09, 0.09, 0.09, 0.1, 0.1, 0.1, 0.1, 0.1, 0.11, 0.11, 0.1, 0.11, 0.12, 0.11, 0.11, 0.12]
)

(
// python3 form_functions.py 50 3.5 1.1
// python3 form_functions.py 50 3.5 0.98
~sections = [0.05, 0.05, 0.06, 0.06, 0.06, 0.06, 0.06, 0.07, 0.06, 0.07, 0.06, 0.07, 0.07, 0.06, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.08, 0.07, 0.07, 0.08, 0.07, 0.07, 0.08, 0.07, 0.07, 0.08, 0.07, 0.08, 0.07, 0.08, 0.07, 0.08, 0.07, 0.08, 0.08, 0.07, 0.08, 0.08, 0.07, 0.08, 0.08, 0.07, 0.07, 0.07, 0.08, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.08, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.06, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.06, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.06, 0.07, 0.07, 0.07];
)
~sections.size;

(
// calculate fills
~fills = Array.fill(~sections.size, { arg i; (i+1)/~sections.size});
~fills = ~fills.normalize(0.999, 1.0);


// set source cound (# of mics)
~numSources = 2; // 3 or 6 (2 each?)

// set number of sine tones (must match number in python analysis server)
~numSines = 4;

~currentData = Array.fill(~numSources, {
	[
		Array.fill(~numSines, { 1.0/~numSines }),
		Array.fill(~numSines, { rrand(100.0, 200.0)})
	]
});

["SECTIONS:", ~sections].postln;
["FILLS:", ~fills].postln;
["NUM MIC SOURCES:", ~numSources].postln;

// check duration based on ~sections
l = 0;
~sections.do( {
	arg dur, i;
	var sec;
	sec = dur * 60;
	l = l + (sec*2);
});
~seconds = l;
~minutes = ~seconds/60;
);

~sections.size;
~seconds;
~minutes;